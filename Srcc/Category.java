
import deo.ConnectionProvider;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.table.TableModel;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Dell
 */
public class Category extends javax.swing.JFrame {
    private int categoryPk=0;
    
    /**
     * Creates new form Category
     */
    public Category() {
        initComponents();
        setLocationRelativeTo(null);
    }
    private boolean validateFields(){
        if(!txtName.getText().equals("")){
            return false;
        }else{
            return true;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        categoryTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        bSave = new javax.swing.JButton();
        bUp = new javax.swing.JButton();
        bRe = new javax.swing.JButton();
        bClose = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 36)); // NOI18N
        jLabel1.setText("Manage Category");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(251, 15, 333, -1));

        categoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        categoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(categoryTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, 500));

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(494, 198, 50, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(494, 235, 323, -1));

        bSave.setText("Save");
        bSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSaveActionPerformed(evt);
            }
        });
        getContentPane().add(bSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(494, 311, -1, -1));

        bUp.setText("Update");
        bUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpActionPerformed(evt);
            }
        });
        getContentPane().add(bUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(567, 311, -1, -1));

        bRe.setText("Reset");
        bRe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReActionPerformed(evt);
            }
        });
        getContentPane().add(bRe, new org.netbeans.lib.awtextra.AbsoluteConstraints(648, 311, -1, -1));

        bClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        bClose.setText("Close");
        bClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });
        getContentPane().add(bClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(725, 309, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/vvvlog.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(-290, -130, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel) categoryTable.getModel();
        try{
        Connection con =ConnectionProvider.getCon();
        Statement st=con.createStatement();
        ResultSet rs=st.executeQuery("select *from category");
        while(rs.next()){
                           model.addRow(new Object[]{rs.getString("category_pk"),rs.getString("name")});
                           

        }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        bUp.setEnabled(false);
    }//GEN-LAST:event_formComponentShown

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCloseActionPerformed
        // TODO add your handling code here:
       
        setVisible(false);
    }//GEN-LAST:event_bCloseActionPerformed

    private void bSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSaveActionPerformed
        // TODO add your handling code here:
        String name=txtName.getText();
        if(validateFields()){
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        else{
          try{
              Connection con =ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("insert into category (name) values(?) ");
            ps.setString(1, name);
            
                       ps.executeUpdate();
                  JOptionPane.showMessageDialog(null, "Category added successfully!");
                             setVisible(false);
                         new Category().setVisible(true);
          
          }
          catch(Exception e){
              JOptionPane.showMessageDialog(null, e);
          }
        }
        
    }//GEN-LAST:event_bSaveActionPerformed

    private void bReActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Category().setVisible(true);
    }//GEN-LAST:event_bReActionPerformed

    private void categoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryTableMouseClicked
        // TODO add your handling code here:
        int index =categoryTable.getSelectedRow();
        TableModel model =categoryTable.getModel();
        String id=model.getValueAt(index,0).toString();
        categoryPk=Integer.parseInt(id);
        String name=model.getValueAt(index, 1).toString();
        txtName.setText(name);
        bSave.setEnabled(false);
        bUp.setEnabled(true);
        
    }//GEN-LAST:event_categoryTableMouseClicked

    private void bUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpActionPerformed
        // TODO add your handling code here:
        String name=txtName.getText();
        if(validateFields()){
            JOptionPane.showMessageDialog(null, "All fields are required");
        }
        else{
          try{
              Connection con =ConnectionProvider.getCon();
            PreparedStatement ps=con.prepareStatement("update category set name=? where category_pk=? ");
            ps.setString(1, name);
            ps.setInt(2, categoryPk);
                       ps.executeUpdate();
                  JOptionPane.showMessageDialog(null, "Category updated successfully!");
                             setVisible(false);
                         new Category().setVisible(true);
          
          }
          catch(Exception e){
              JOptionPane.showMessageDialog(null, e);
          }
        }
        
        
    }//GEN-LAST:event_bUpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Category.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Category().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bClose;
    private javax.swing.JButton bRe;
    private javax.swing.JButton bSave;
    private javax.swing.JButton bUp;
    private javax.swing.JTable categoryTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
